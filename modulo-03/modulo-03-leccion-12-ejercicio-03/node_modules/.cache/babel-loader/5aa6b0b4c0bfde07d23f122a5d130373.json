{"ast":null,"code":"var _jsxFileName = \"/home/anapy/Escritorio/adalab/ejercicios-de-adalab/modulo-03/modulo-03-leccion-12-ejercicio-03/src/components/Counter.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst App = () => {\n  // usamos el hook useState para crear counter en el estado del componente\n  const [counter, setCounter] = useState(0); // usamos el hook useEffect para gestionar los ciclos de vida del componente\n\n  useEffect(() => {\n    // las 3 siguientes líneas se ejecutan al montar y renderizar el componente\n    let intervalId = setInterval(() => {\n      setCounter(counter + 1);\n    }, 1000); // la función retornada a continuación se ejecuta al desmontar y renderizar el componente\n    // return () => {\n    //   clearInterval(intervalId);\n    // };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }\n  }, \"Contador: \", counter);\n};\n\nexport default App;","map":{"version":3,"sources":["/home/anapy/Escritorio/adalab/ejercicios-de-adalab/modulo-03/modulo-03-leccion-12-ejercicio-03/src/components/Counter.js"],"names":["React","useState","useEffect","App","counter","setCounter","intervalId","setInterval"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,CAAD,CAAtC,CAFgB,CAGhB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAII,UAAU,GAAGC,WAAW,CAAC,MAAM;AACjCF,MAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,KAF2B,EAEzB,IAFyB,CAA5B,CAFc,CAKd;AACA;AACA;AACA;AACD,GATQ,CAAT;AAUA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAgBA,OAAhB,CAAP;AACD,CAfD;;AAiBA,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst App = () => {\n  // usamos el hook useState para crear counter en el estado del componente\n  const [counter, setCounter] = useState(0);\n  // usamos el hook useEffect para gestionar los ciclos de vida del componente\n  useEffect(() => {\n    // las 3 siguientes líneas se ejecutan al montar y renderizar el componente\n    let intervalId = setInterval(() => {\n      setCounter(counter + 1);\n    }, 1000);\n    // la función retornada a continuación se ejecuta al desmontar y renderizar el componente\n    // return () => {\n    //   clearInterval(intervalId);\n    // };\n  });\n  return <div>Contador: {counter}</div>;\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}