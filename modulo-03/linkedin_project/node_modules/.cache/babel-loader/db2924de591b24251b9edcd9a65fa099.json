{"ast":null,"code":"var _jsxFileName = \"/home/anapy/Escritorio/adalab/ejercicios-de-adalab/modulo-03/linkedin_project/src/components/App.js\";\nimport React from 'react';\nimport Form from './Form';\nimport Results from './Results';\nimport getDataFromApi from '../services/getDataFromApi';\nimport '../stylesheets/App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getInfoFromApi = this.getInfoFromApi.bind(this);\n    this.state = {\n      users: [],\n      cities: [],\n      gender: []\n    };\n    this.getInfoFromApi();\n  }\n\n  getInfoFromApi() {\n    getDataFromApi().then(data => //console.log(data[0].dob.age)\n    data.map(data => this.setState(() => {\n      const newUser = {\n        name: data.name.first,\n        photo: data.picture.large,\n        city: data.location.city,\n        age: data.dob.age,\n        gender: data.gender\n      }; //se repite 50 veces en el estado, ¿es eficiente o hay otra forma de hacerlo?\n\n      return {\n        users: [...this.state.users, newUser]\n      };\n    })));\n  }\n\n  handleCities(city) {\n    const cities = this.users.setState(this.users.filter(user => user.city === city));\n    console.log(cities);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      handleCities: this.handleCities,\n      userInfo: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Results, {\n      userInfo: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/anapy/Escritorio/adalab/ejercicios-de-adalab/modulo-03/linkedin_project/src/components/App.js"],"names":["React","Form","Results","getDataFromApi","App","Component","constructor","props","getInfoFromApi","bind","state","users","cities","gender","then","data","map","setState","newUser","name","first","photo","picture","large","city","location","age","dob","handleCities","filter","user","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAO,wBAAP;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,MAAM,EAAE,EAFG;AAGXC,MAAAA,MAAM,EAAE;AAHG,KAAb;AAKA,SAAKL,cAAL;AACD;;AACDA,EAAAA,cAAc,GAAI;AAChBL,IAAAA,cAAc,GACbW,IADD,CACMC,IAAI,IACP;AACHA,IAAAA,IAAI,CAACC,GAAL,CAAUD,IAAI,IAAI,KAAKE,QAAL,CAAc,MAAM;AACpC,YAAMC,OAAO,GAAG;AACdC,QAAAA,IAAI,EAAEJ,IAAI,CAACI,IAAL,CAAUC,KADF;AAEdC,QAAAA,KAAK,EAAEN,IAAI,CAACO,OAAL,CAAaC,KAFN;AAGdC,QAAAA,IAAI,EAAET,IAAI,CAACU,QAAL,CAAcD,IAHN;AAIdE,QAAAA,GAAG,EAAEX,IAAI,CAACY,GAAL,CAASD,GAJA;AAKdb,QAAAA,MAAM,EAAEE,IAAI,CAACF;AALC,OAAhB,CADoC,CAQpC;;AACF,aAAO;AACLF,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,EAAsBO,OAAtB;AADF,OAAP;AAGC,KAZiB,CAAlB,CAHA;AAiBD;;AAEDU,EAAAA,YAAY,CAACJ,IAAD,EAAO;AACnB,UAAMZ,MAAM,GAAG,KAAKD,KAAL,CAAWM,QAAX,CAAoB,KAAKN,KAAL,CAAWkB,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACN,IAAL,KAAcA,IAAxC,CAApB,CAAf;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYpB,MAAZ;AACC;;AAEDqB,EAAAA,MAAM,GAAG;AAEP,wBACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AACA,MAAA,YAAY,EAAE,KAAKL,YADnB;AAEA,MAAA,QAAQ,EAAE,KAAKlB,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAE,KAAKA,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,CADA;AAaD;;AAnD+B;;AAsDlC,eAAeN,GAAf","sourcesContent":["import React from 'react';\nimport Form from './Form';\nimport Results from './Results';\nimport getDataFromApi from '../services/getDataFromApi';\nimport '../stylesheets/App.css';\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props);\n    this.getInfoFromApi = this.getInfoFromApi.bind(this);\n    this.state = {\n      users: [],\n      cities: [],\n      gender: []\n    }\n    this.getInfoFromApi();\n  }\n  getInfoFromApi () {\n    getDataFromApi()\n    .then(data =>\n       //console.log(data[0].dob.age)\n    data.map( data => this.setState(() => {\n      const newUser = {\n        name: data.name.first,\n        photo: data.picture.large,\n        city: data.location.city,\n        age: data.dob.age,\n        gender: data.gender\n      }\n      //se repite 50 veces en el estado, ¿es eficiente o hay otra forma de hacerlo?\n    return {\n      users: [...this.state.users, newUser],\n    }\n    }))\n    );\n  }\n\n  handleCities(city) {\n  const cities = this.users.setState(this.users.filter(user => user.city === city));\n  console.log(cities);\n  }\n\n  render() {\n\n    return (\n    <div className=\"App\">\n      <div>\n        <Form\n        handleCities={this.handleCities}\n        userInfo={this.state}\n        />\n      </div>\n      <div>\n        <Results userInfo={this.state} />\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}